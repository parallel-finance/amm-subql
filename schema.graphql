type Token @entity {
  id: ID!
  created: Date!
  lastEdited: Date!
  tokenId: String! @index
  supply: BigInt!
  name: String!
  symbol: String! @index
  decimals: Int!
  isFrozen: Boolean
}

type TokenSwap @entity {
  timestamp: Date!
  pool: LiquidityPool! @index
  fromToken: Token!
  toToken: Token!
  qtyFrom: BigInt!
  qtyTo: BigInt!
  fees: Int!
  account: String!
}

type LiquidityDeposit @entity {
  id: ID!
  timestamp: Date!
  account: String!
  pool: LiquidityPool! @index
  quantityLPTokenReceived: BigInt!
  quantityBaseTokenProvided: BigInt!
  quantityQuoteTokenProvided: BigInt!
}

type LiquidityWithdrawal @entity {
  id: ID!
  timestamp: Date!
  account: String!
  pool: LiquidityPool!
  quantityLPTokenProvided: BigInt!
  quantityBaseTokenReceived: BigInt!
  quantityQuoteTokenReceived: BigInt!
}

type PoolSnapshot @entity {
  id: ID!
  pool: LiquidityPool! @index
  timestamp: Date!
  poolTokenSupply: BigInt!
  baseTokenVolume: BigInt!
  quoteTokenVolume: BigInt!
  totalTrades: Int!
  totalBaseTokenTraded: BigInt!
  totalQuoteTokenTraded: BigInt!
}


type LiquidityPool @entity {
  id: ID!
  created: Date!
  baseToken: Token! @index
  quoteToken: Token! @index
  poolToken: Token! @index
  baseTokenVolume: BigInt!
  quoteTokenVolume: BigInt!
  history: [PoolSnapshot]
}